{"version":3,"sources":["CreatorApp.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["CreatorApp","props","emptyDrop","emptyShopItem","emptyQuest","useState","id","setId","name","setName","datetime","setDatetime","dropList","setDropList","resultJson","setResultJson","handleAddReward","event","index","target","value","temp","shopList","push","handleAddQuest","dropIndex","questList","handleDeleteDrop","console","log","splice","handleDeleteReward","split","rewardIndex","handleDeleteQuest","questIndex","handleDropNameChange","dropName","handleRewardChange","Number","handleQuestChange","to","Form","Group","as","Row","Label","column","sm","Col","Control","type","onChange","className","Button","variant","size","onClick","map","drop","Card","key","Table","striped","bordered","hover","reward","rewardName","rewardCost","rewardQuantity","quest","questName","questDropTotal","questDropQuantity","questAp","jsonData","style","textAlign","JSON","stringify","RewardTable","responsive","inline","onSubmit","preventDefault","min","max","rewardState","handler","total","owned","Calculator","localStorage","getItem","activityId","setActivityId","endTime","setEndTime","apLimit","setApLimit","dropListData","setDropListData","parse","setRewardState","totalList","setTotalList","ownedList","setOwnedList","boostList","setBoostList","selectedQuestList","setSelectedQuestList","currentTime","Date","timeDifferenceInMinutes","diffTime","Math","abs","ceil","questTime","averageDrop","selectQuestId","questData","averageDropPerQuest","dropNeeded","apRequired","totalApRequired","reduce","accumulator","currentValue","tempRewardState","setItem","tempTotal","currentIndex","handleOwnedChange","tempOwned","handleBoostChange","tempBoost","handleSelectedQuestChange","tempSelectedQuest","useEffect","data","activity","endAt","tempState","undefined","require","Container","bg","fluid","item","getFullYear","getMonth","toString","padStart","getDate","getHours","getMinutes","Tabs","defaultActiveKey","Tab","eventKey","title","questId","floor","App","basename","window","location","pathname","exact","path","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","module","exports"],"mappings":"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","file":"static/js/main.3d047cb5.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\n\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Card from 'react-bootstrap/Card'\nimport Button from 'react-bootstrap/Button'\n\nfunction CreatorApp(props){\n\n\tconst emptyDrop = {\n\t\t\"dropName\": \"\",\n\t\t\"shopList\": [\n\t\t\t{\n\t\t\t\t\"rewardName\": \"\",\n\t\t\t\t\"rewardCost\": 0,\n\t\t\t\t\"rewardQuantity\" : 0\n\t\t\t}\n\t\t],\n\t\t\"questList\": [\n\t\t\t{\n\t\t\t\t\"questName\": \"\",\n\t\t\t\t\"questDropTotal\": 0,\n\t\t\t\t\"questDropQuantity\": 0,\n\t\t\t\t\"questAp\": 0\n\t\t\t}\n\t\t]\n\t}\n\n\tconst emptyShopItem = {\n\t\t\"rewardName\": \"\",\n\t\t\"rewardCost\": 0,\n\t\t\"rewardQuantity\" : 0\n\t}\n\n\tconst emptyQuest = {\n\t\t\"questName\": \"\",\n\t\t\"questDropTotal\": 0,\n\t\t\"questDropQuantity\": 0,\n\t\t\"questAp\": 0\n\t}\n\t\n\n\tconst [id, setId] = useState(-1);\n\tconst [name, setName] = useState(\"\");\n\tconst [datetime, setDatetime] = useState(\"2020-01-01T12:00\");\n\n\tconst [dropList, setDropList] = useState([{...emptyDrop}]);\n\t\n\tconst [resultJson, setResultJson] = useState({});\n\n\tfunction handleAddDrop(event){\n\t\tlet temp = [...dropList]\n\t\ttemp.push({...emptyDrop})\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleAddReward(event){\n\t\tlet index = event.target.value\n\n\t\tlet temp = [...dropList]\n\t\ttemp[index].shopList.push({...emptyShopItem})\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleAddQuest(event){\n\t\tlet target = event.target\n\t\tlet dropIndex = target.value\n\n\t\tlet temp = [...dropList]\n\t\ttemp[dropIndex].questList.push({...emptyQuest})\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleDeleteDrop(event){\n\t\tconsole.log(event.target.value)\n\t\tlet temp = [...dropList]\n\t\ttemp.splice(event.target.value,1)\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleDeleteReward(event){\n\t\tlet target = event.target\n\t\tlet dropIndex = target.value.split(\"-\")[0]\n\t\tlet rewardIndex = target.value.split(\"-\")[1]\n\n\t\tlet temp = [...dropList]\n\t\ttemp[dropIndex].shopList.splice(rewardIndex,1)\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleDeleteQuest(event){\n\t\tlet target = event.target\n\t\tlet dropIndex = target.value.split(\"-\")[0]\n\t\tlet questIndex = target.value.split(\"-\")[1]\n\n\t\tlet temp = [...dropList]\n\t\ttemp[dropIndex].questList.splice(questIndex,1)\n\t\tsetDropList(temp)\n\t}\n\n\t//=======================================\n\n\tfunction handleIdChange(event){\n\t\tlet value = event.target.value;\n\t\tsetId(value);\n\t}\n\n\tfunction handleNameChange(event){\n\t\tlet value = event.target.value;\n\t\tsetName(value);\n\t}\n\n\tfunction handleDatetimeChange(event){\n\t\tlet target = event.target;\n\t\tsetDatetime(target.value);\n\t}\n\n\t//========================================\n\n\tfunction handleDropNameChange(event){\n\t\tlet target = event.target\n\t\tlet name = target.name.split(\"-\")[0]\n\t\tlet index = target.name.split(\"-\")[1]\n\n\t\tlet temp = [...dropList]\n\t\ttemp[index].dropName = target.value\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleRewardChange(event){\n\t\tlet target = event.target\n\t\tlet name = target.name.split(\"-\")[0]\n\t\tlet dropIndex = target.name.split(\"-\")[1]\n\t\tlet rewardIndex = target.name.split(\"-\")[2]\n\n\t\tlet temp = [...dropList]\n\t\ttemp[dropIndex].shopList[rewardIndex][name] = \n\t\t\t(name === \"rewardName\" ? target.value : \n\t\t\t\t(target.value ?\n      \t\t\t\tNumber(target.value) :\n      \t\t\t\ttarget.value))\n\t\tsetDropList(temp)\n\t}\n\n\tfunction handleQuestChange(event){\n\t\tlet target = event.target\n\t\tlet name = target.name.split(\"-\")[0]\n\t\tlet dropIndex = target.name.split(\"-\")[1]\n\t\tlet questIndex = target.name.split(\"-\")[2]\n\n\t\tlet temp = [...dropList]\n\t\ttemp[dropIndex].questList[questIndex][name] = \n\t\t\t(name === \"questName\" ? target.value : \n\t\t\t\t(target.value ?\n      \t\t\t\tNumber(target.value) :\n      \t\t\t\ttarget.value))\n\t\tsetDropList(temp)\n\t}\n\n\tfunction setJson(){\n\t\tvar jsonData = {\n\t\t\t...resultJson,\n\t\t\t\"id\": Number(id),\n\t\t\t\"name\": name,\n\t\t\t\"endAt\": datetime,\n\t\t\t\"drop\": dropList\n\t\t};\n\n\t\tsetResultJson(jsonData);\n\t}\n\n\t\n\n\treturn (\n\t\t<div>\n\t\t\t<h3>JSON Creator</h3>\n\t\t\t<hr/>\n\t\t\t<Link to=\"/\">Home Page</Link>\n\t\t\t<hr/>\n\t\t\t\n\t\t\t<Form>\n\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t<Form.Label column sm={2}>ID:</Form.Label>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\ttype=\"number\" \n\t\t\t\t\t\t\tvalue={id}\n\t\t\t\t\t\t\tonChange={handleIdChange} />\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t<Form.Label column sm={2}>活動名稱：</Form.Label>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tclassName=\"activity-name\"\n\t\t\t\t\t\t\tvalue={name}\n\t\t\t\t\t\t\tonChange={handleNameChange}/>\n\t\t\t\t\t</Col>\n\t\t\t\t\t\n\t\t\t\t</Form.Group>\n\n\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t<Form.Label column sm={2}>結束時間：</Form.Label>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\tas=\"input\"\n\t\t\t\t\t\t\ttype=\"datetime-local\"\n\t\t\t\t\t\t\tclassName=\"date\"\n\t\t\t\t\t\t\tvalue={datetime}\n\t\t\t\t\t\t\tonChange={handleDatetimeChange}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t</Col>\n\t\t\t\t</Form.Group>\n\t\t\t</Form>\n\n\t\t\t<hr/>\n\n\t\t\t<Row className=\"mb-2\">\n\t\t\t\t<Col>\n\t\t\t\t\t掉落物列表{' '}\n\t\t\t\t\t<Button variant=\"info\" size=\"sm\" onClick={handleAddDrop}>+</Button>{' '}\n\t\t\t\t</Col>\n\t\t\t</Row>\n\n\t\t\t{\n\t\t\t\tdropList.map((drop, dropIndex) => \n\t\t\t\t\t<Card key={\"drop-\"+dropIndex} className=\"pt-2 pl-2 pr-2 mb-2 ml-1 mr-1\">\n\t\t\t\t\t\t<Form>\n\t\t\t\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t\t\t\t<Form.Label column sm={3}>掉落物名稱：</Form.Label>\n\t\t\t\t\t\t\t\t<Col sm={8}>\n\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tname={\"dropName-\"+dropIndex}\n\t\t\t\t\t\t\t\t\t\tvalue={drop.dropName}\n\t\t\t\t\t\t\t\t\t\tonChange={handleDropNameChange}/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={1}>\n\t\t\t\t\t\t\t\t\t<Button variant=\"danger\" size=\"sm\" value={dropIndex} onClick={handleDeleteDrop}>-</Button>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Form>\n\n\t\t\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t\t\t<Col sm={1}></Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>交易物{' '}<Button variant=\"info\" size=\"sm\" value={dropIndex} onClick={handleAddReward}>+</Button>{' '}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>需求數</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>數量</td>\n\t\t\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\tdrop.shopList.map((reward,rewardIndex) => \n\t\t\t\t\t\t\t\t\t\t\t\t<tr key={rewardIndex}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"rewardName-\"+dropIndex+\"-\"+rewardIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={reward.rewardName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRewardChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"rewardCost-\"+dropIndex+\"-\"+rewardIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={reward.rewardCost}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRewardChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"rewardQuantity-\"+dropIndex+\"-\"+rewardIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={reward.rewardQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRewardChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"danger\" value={dropIndex+\"-\"+rewardIndex} onClick={handleDeleteReward}>-</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</Col>\n\n\t\t\t\t\t\t</Form.Group>\n\n\t\t\t\t\t\t<Form.Group as={Row}>\n\t\t\t\t\t\t\t<Col sm={1}></Col>\n\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t<td>關卡名稱{' '}<Button variant=\"info\" size=\"sm\" value={dropIndex} onClick={handleAddQuest}>+</Button>{' '}</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>掉落數<br/>枠数</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>堆數<br/>ドロップ個数</td>\n\t\t\t\t\t\t\t\t\t\t\t<td>AP</td>\n\t\t\t\t\t\t\t\t\t\t\t<td></td>\n\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\tdrop.questList.map((quest, questIndex) => \n\t\t\t\t\t\t\t\t\t\t\t<tr key={questIndex}>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"questName-\"+dropIndex+\"-\"+questIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={quest.questName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleQuestChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"questDropTotal-\"+dropIndex+\"-\"+questIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={quest.questDropTotal}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleQuestChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"questDropQuantity-\"+dropIndex+\"-\"+questIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={quest.questDropQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleQuestChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={\"questAp-\"+dropIndex+\"-\"+questIndex}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={quest.questAp}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleQuestChange}/>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"danger\" value={dropIndex+\"-\"+questIndex} onClick={handleDeleteQuest}>-</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>)\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t</Card>\n\t\t\t\t\t)\n\t\t\t}\n\n\n\t\t\t<Form>\n\t\t\t\t{/*<Row>\n\t\t\t\t\t<Col>\n\t\t\t\t\t\t掉落物列表<i className=\"fas fa-plus-square\" onClick={handleAddDrop}></i>\n\t\t\t\t\t</Col>\n\t\t\t\t</Row>\n\t\t\t\t\n\t\t\t\t<br/>\n\t\t\t\t{\n\t\t\t\t\tdropDetail.map((item,dropIndex) =>\n\t\t\t\t\t\t<Card>\n\t\t\t\t\t\t<Form.Group key={dropIndex}> \n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Form.Label column sm={2}>掉落物名稱：</Form.Label>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Form.Control \n\t\t\t\t\t\t\t\t\t\tname={dropIndex}\n\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\tvalue={item.dropName}\n\t\t\t\t\t\t\t\t\t\tonChange={handleDropNameChange}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t<br/>\n\t\t\t\t\t\t\t<Button variant=\"info\" onClick={handleAddReward} name={dropIndex}>新增交易物</Button>{' '}\n\t\t\t\t\t\t\t<br />\n\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={2}></Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>交易物</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>最大數量</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>需求數</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\titem.rewardList.map((reward,rewardIndex) =>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={rewardIndex}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={reward.rewardName}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={dropIndex+\"-\"+rewardIndex+\"-\"+\"rewardName\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRewardInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={reward.rewardQuantity}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={dropIndex+\"-\"+rewardIndex+\"-\"+\"rewardQuantity\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRewardInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={reward.rewardCost}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={dropIndex+\"-\"+rewardIndex+\"-\"+\"rewardCost\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tonChange={handleRewardInputChange}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\t\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t<Col sm={1}></Col>\n\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t<Col sm={1}></Col>\n\t\t\t\t\t\t\t\t<Col>\n\t\t\t\t\t\t\t\t\t<Table striped bordered hover>\n\t\t\t\t\t\t\t\t\t\t<thead>\n\t\t\t\t\t\t\t\t\t\t\t<tr>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>關卡名稱</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>掉落數<br/>枠数</td>\n\t\t\t\t\t\t\t\t\t\t\t\t<td>堆數<br/>ドロップ個数</td>\n\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t</thead>\n\t\t\t\t\t\t\t\t\t\t<tbody>\n\t\t\t\t\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\t\t\t\t[1,2,3].map(tempKey => \n\t\t\t\t\t\t\t\t\t\t\t\t\t<tr key={tempKey}>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={dropIndex+\"-questName\"}\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tvalue={}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={dropIndex+\"questDropTotal\"}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t<td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t<Form.Control\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\ttype=\"number\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tname={dropIndex+\"questDropQuantity\"}/>\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t</tbody>\n\t\t\t\t\t\t\t\t\t</Table>\n\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t</Row>\n\n\t\t\t\t\t\t</Form.Group>\n\t\t\t\t\t\t</Card>)\n\t\t\t\t}*/}\n\t\t\t\t\n\t\t\t</Form>\n\n\t\t\t<Button variant=\"success\" onClick={setJson}>生成</Button>\n\t\t\t<hr/>\n\n\t\t\t<pre style={{textAlign: 'left'}}>{JSON.stringify(resultJson,null,4)}</pre>\n\t\t\t\n\n\t\t</div>\n\t\t);\n}\n\nexport default CreatorApp;","import React, {useState, useEffect} from 'react';\n\nimport {BrowserRouter as Router, Switch, Route, Link} from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport CreatorApp from \"./CreatorApp.js\"\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport 'react-bootstrap-table-next/dist/react-bootstrap-table2.min.css'\n\nimport cellEditFactory from 'react-bootstrap-table2-editor'; \nimport BootstrapTable from 'react-bootstrap-table-next';\n\nimport Container from 'react-bootstrap/Container';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\n\nimport Form from 'react-bootstrap/Form';\nimport Button from 'react-bootstrap/Button';\n\nimport Card from 'react-bootstrap/Card';\nimport CardDeck from 'react-bootstrap/CardDeck'\nimport CardGroup from 'react-bootstrap/CardGroup'\nimport Table from 'react-bootstrap/Table'\nimport Tabs from 'react-bootstrap/Tabs'\nimport Tab from 'react-bootstrap/Tab'\n\nfunction RewardTable(props){\n\n  const reducer = (accumulator, currentValue,currentIndex) => \n    accumulator + currentValue.rewardCost * props.state[currentIndex];\n\n  return (\n      <Table striped bordered hover \n        size=\"sm\" responsive=\"sm\"\n        className=\"reward-table\">\n        <thead>\n           <tr>\n            <th>獎勵</th>\n            <th>需要數量</th>\n            <th>掉落物需求</th>\n            <th>總掉落物需求</th>\n          </tr>\n        </thead>\n        <tbody>\n        {\n          props.shopList.map((reward, rewardIndex) =>\n            <tr key={rewardIndex}>\n              <td className=\"name-td\">{reward.rewardName}</td>\n              <td className=\"number-td-required\">\n                <Form inline onSubmit={(event) => event.preventDefault()}>\n                  <Form.Control\n                    as=\"input\"\n                    type=\"number\"\n                    name={\"rewardState-\"+props.dropIndex+\"-\"+rewardIndex}\n                    min=\"0\"\n                    max={reward.rewardQuantity}\n                    value={props.rewardState[rewardIndex]}\n                    onChange={props.handler}\n                    />\n                    <Form.Label>{\" /\"+reward.rewardQuantity}</Form.Label>\n                </Form>\n              </td>\n              <td className=\"number-td-cost\">{reward.rewardCost}</td>\n              <td className=\"number-td-total\">{props.rewardState[rewardIndex]*reward.rewardCost}</td>\n            </tr>\n            )\n        }\n          <tr key={997}>\n            <td></td>\n            <td></td>\n            <td>總計：</td>\n            <td>{props.total}</td>\n          </tr>\n\n          <tr key={998}>\n            <td></td>\n            <td></td>\n            <td>現有：</td>\n            <td>{props.owned}</td>\n          </tr>\n\n          <tr key={999}>\n            <td></td>\n            <td></td>\n            <td>尚欠：</td>\n            <td>{(props.total - props.owned >= 0 ? props.total-props.owned : 0)}</td>\n          </tr>\n\n        </tbody>\n      </Table>\n    );\n}\n\nfunction Calculator(props){\n\n  const [activityId, setActivityId] = \n    useState(localStorage.getItem('activityId') || 0)\n  //const [activityData, setActivityData] = useState({});\n  const [endTime, setEndTime] = useState(\"2099-12-31T12:00\")\n  const [apLimit, setApLimit] = \n    useState(localStorage.getItem('apLimit') || 20)\n\n  const [dropListData, setDropListData] = useState([])\n  const [rewardState, setRewardState] = \n    useState(JSON.parse(localStorage.getItem(\"rewardState\"))||[])\n  const [totalList, setTotalList] = useState(\n    JSON.parse(localStorage.getItem(\"totalList\"))||[])\n\n  const [ownedList, setOwnedList] = \n    useState(JSON.parse(localStorage.getItem(\"ownedList\"))||[])\n  const [boostList, setBoostList] = \n    useState(JSON.parse(localStorage.getItem(\"boostList\"))||[])\n\n  const [selectedQuestList, setSelectedQuestList] = \n    useState(JSON.parse(localStorage.getItem('selectedQuestList'))||[])\n\n  var currentTime = new Date()\n\n  useEffect(init,[])\n  \n  function init(){\n\n    console.log(\"start with \"+activityId);\n    setEndTime(data.activity[activityId].endAt)\n    setDropListData(data.activity[activityId].drop)\n\n    if (activityId === 0){\n      return\n    }\n\n    let tempState = data.activity[activityId].drop.map(\n      (drop, dropIndex) => (\n        drop.shopList.map(reward => 0)\n        ))\n    let tempTotal = data.activity[activityId].drop.map(\n      (drop, dropIndex) => 0)\n    let tempOwned = data.activity[activityId].drop.map(\n      (drop, dropIndex) => 0)\n    let tempBoost = data.activity[activityId].drop.map(\n      (drop, dropIndex) => 0)\n\n    if (rewardState === undefined || rewardState === []){\n      setRewardState(tempState)\n    }\n    if (totalList === undefined || totalList === []){\n      setTotalList(tempTotal)\n    }\n    \n    if (ownedList === undefined || ownedList === []){\n      setOwnedList(tempOwned)\n    }\n\n    if (boostList === undefined || boostList === []){\n      setBoostList(tempBoost)\n    }\n  }\n\n  function timeDifferenceInMinutes(){\n    const diffTime = Math.abs(new Date(endTime) - currentTime)\n    const diffMin = Math.ceil(diffTime / (1000*60))\n    return diffMin\n  }\n\n  function averageDropPerQuest(dropIndex){\n    let selectQuestId = selectedQuestList[dropIndex]\n\n    let questData = dropListData[dropIndex].questList[selectQuestId]\n\n    let averageDrop = questData.questDropTotal + questData.questDropQuantity * boostList[dropIndex]\n\n    return averageDrop\n  }\n\n  function questTime(dropIndex){\n    let averageDrop = averageDropPerQuest(dropIndex)\n\n    let dropNeeded = totalList[dropIndex] - ownedList[dropIndex]\n\n    return Math.ceil(dropNeeded/averageDrop)\n\n  }\n\n  function apRequired(dropIndex){\n\n    let selectQuestId = selectedQuestList[dropIndex]\n\n    let questData = dropListData[dropIndex].questList[selectQuestId]\n\n    return questTime(dropIndex) * questData.questAp\n  }\n\n  function totalApRequired(){\n    let total = dropListData.map((drop, dropIndex) => \n      apRequired(dropIndex)).reduce(\n        (accumulator, currentValue) => accumulator + currentValue, 0)\n\n    return total\n  }\n\n  function handleActivityChange(event){\n    let value = event.target.value\n\n    setActivityId(value)\n    setEndTime(data.activity[value].endAt)\n    setDropListData(data.activity[value].drop)\n\n    //localStorage.clear()\n    //localStorage.removeItem('apLimit')\n    localStorage.setItem('apLimit',apLimit)\n    localStorage.setItem('activityId',value)\n\n    //console.log(value)\n    if (value === \"0\"){\n      return\n    }\n\n    let tempState = data.activity[value].drop.map(\n      (drop, dropIndex) => (\n        drop.shopList.map(reward => 0)\n        ))\n\n    let tempTotal = data.activity[value].drop.map(\n      (drop, dropIndex) => 0)\n    let tempOwned = data.activity[value].drop.map(\n      (drop, dropIndex) => 0)\n    let tempBoost = data.activity[value].drop.map(\n      (drop, dropIndex) => 0)\n\n    setRewardState(tempState)\n    setTotalList(tempTotal)\n    setOwnedList(tempOwned)\n    setBoostList(tempBoost)\n\n    localStorage.setItem('rewardState',JSON.stringify(tempState))\n    localStorage.setItem('totalList',JSON.stringify(tempTotal))\n    localStorage.setItem('ownedList',JSON.stringify(tempOwned))\n    localStorage.setItem('boostList',JSON.stringify(tempBoost))\n\n    let tempSelectedQuest = data.activity[value].drop.map(\n      (drop, dropIndex) => 0)\n\n    setSelectedQuestList(tempSelectedQuest)\n    localStorage.setItem('selectedQuestList',JSON.stringify(tempSelectedQuest))\n  }\n\n  function handleRewardChange(event){\n    let target = event.target\n    let value = (target.value ?\n      Math.max(Number(target.min), Math.min(Number(target.max), Number(target.value))) :\n      target.value)\n\n    let name = target.name.split(\"-\")[0]\n    let dropIndex = target.name.split(\"-\")[1]\n    let rewardIndex = target.name.split(\"-\")[2]\n\n    let tempRewardState = [...rewardState]\n    tempRewardState[dropIndex][rewardIndex] = value\n    setRewardState(tempRewardState)\n    localStorage.setItem('rewardState',JSON.stringify(tempRewardState))\n\n    let tempTotal = tempRewardState.map((drop, dropIndex) =>\n      drop.reduce((accumulator, currentValue, currentIndex) =>\n        accumulator + currentValue * \n          dropListData[dropIndex].shopList[currentIndex].rewardCost,0\n        ))\n    setTotalList(tempTotal)\n    localStorage.setItem('totalList',JSON.stringify(tempTotal))\n  }\n\n  function handleOwnedChange(event){\n    let target = event.target\n    let value = (target.value ? Math.max(Number(target.min), Number(target.value)) : target.value)\n\n    let name = target.name.split(\"-\")[0]\n    let dropIndex = target.name.split(\"-\")[1]\n\n    let tempOwned = [...ownedList]\n    tempOwned[dropIndex] = value\n    setOwnedList(tempOwned)\n    localStorage.setItem('ownedList',JSON.stringify(tempOwned))\n  }\n\n  function handleBoostChange(event){\n    let target = event.target\n    let value = (target.value ? Math.max(Number(target.min), Number(target.value)) : target.value)\n\n    let name = target.name.split(\"-\")[0]\n    let dropIndex = target.name.split(\"-\")[1]\n\n    let tempBoost = [...boostList]\n    tempBoost[dropIndex] = value\n    setBoostList(tempBoost)\n    localStorage.setItem('boostList',JSON.stringify(tempBoost))\n  }\n\n  function handleSelectedQuestChange(event){\n    let target = event.target\n\n    let name = target.name.split(\"-\")[0]\n    let dropIndex = target.name.split(\"-\")[1]\n    \n    let tempSelectedQuest = [...selectedQuestList]\n    tempSelectedQuest[dropIndex] = target.value\n    setSelectedQuestList(tempSelectedQuest)\n    localStorage.setItem('selectedQuestList',JSON.stringify(tempSelectedQuest))\n  }\n\n  function handleApLimitChange(event){\n    let target = event.target\n    let value = (target.value ? Math.max(Number(target.min), Number(target.value)) : target.value)\n\n    setApLimit(value)\n    localStorage.setItem('apLimit',value)\n  }\n\n\n  let data = require(\"./activity.json\");\n\n  return (\n    <Container bg=\"light\" fluid>\n      <h2 className=\"text-center\">FGO 活動周回規劃</h2>\n      <hr/>\n\n      <hr/>\n      \n      <Form onSubmit={(event) => event.preventDefault()}>\n        <Form.Group as={Row}>\n          <Form.Label column>選擇活動：</Form.Label>\n          <Col>\n            <Form.Control\n              as=\"select\"\n              value={activityId}\n              onChange={handleActivityChange}>\n              {\n                data.activity.map(item =>\n                  <option key={item.id} value={item.id}>{item.name}</option>)\n              }\n            </Form.Control>\n          </Col>\n        </Form.Group>\n      </Form> \n        {\n          activityId == 0 ? <div></div> :\n          <div>\n            <Form>\n              <Form.Group as={Row}>\n                <Form.Label column>AP上限</Form.Label>\n                <Col>\n                  <Form.Control \n                    as=\"input\"\n                    type=\"number\"\n                    name=\"apLimit\"\n                    min=\"0\"\n                    value={apLimit}\n                    onChange={handleApLimitChange}/>\n                </Col>\n              </Form.Group>\n\n              <Form.Group as={Row}>\n                <Form.Label column>結束時間</Form.Label>\n                <Col style={{textAlign: \"left\"}}>\n                  {new Date(endTime).getFullYear()+\"-\"+\n                  (new Date(endTime).getMonth()+1).toString().padStart(2, '0')+\"-\"+\n                  new Date(endTime).getDate().toString().padStart(2, '0')+\" \"+\n                  new Date(endTime).getHours().toString().padStart(2, '0')+\":\"+\n                  new Date(endTime).getMinutes().toString().padStart(2, '0')\n                }\n                </Col>\n              </Form.Group>\n            </Form>\n\n            <Tabs defaultActiveKey={0}>\n              {\n                dropListData.map((drop, dropIndex) => \n                  <Tab key={dropIndex} eventKey={dropIndex} title={drop.dropName}>\n                    {<RewardTable\n                      shopList={drop.shopList}\n                      rewardState={rewardState[dropIndex]}\n                      dropIndex={dropIndex}\n                      handler={handleRewardChange}\n                      total={totalList[dropIndex]}\n                      owned={ownedList[dropIndex]}\n                      />}\n                  </Tab>\n                  )\n              }\n              <Tab eventKey={999} title={\"總論\"}>\n                <Table striped bordered hover \n                  size=\"sm\" responsive=\"sm\"\n                  className=\"conclusion-table\">\n                  <thead>\n                    <tr>\n                      <td>掉落物</td>\n                      <td>現有數量</td>\n                      <td>加成量</td>\n                      <td>副本選擇</td>\n                      <td>場次</td>\n                      <td>所需體力</td>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      dropListData.map((drop, dropIndex) => (\n                        <tr key={dropIndex}>\n                          <td className=\"conclusion-table drop-name\">{drop.dropName}</td>\n                          <td className=\"conclusion-table owned\">\n                            <Form.Control \n                              as=\"input\"\n                              type=\"number\"\n                              name={\"owned-\"+dropIndex}\n                              min=\"0\"\n                              value={ownedList[dropIndex]}\n                              onChange={handleOwnedChange}/>\n                          </td>\n                          <td className=\"conclusion-table boost\">\n                            <Form.Control \n                              as=\"input\"\n                              type=\"number\"\n                              name={\"boost-\"+dropIndex}\n                              min=\"0\"\n                              value={boostList[dropIndex]}\n                              onChange={handleBoostChange}\n                              />\n                          </td>\n                          <td className=\"conclusion-table quest-select\">\n                            <Form.Control\n                              as=\"select\"\n                              value={selectedQuestList[dropIndex]}\n                              onChange={handleSelectedQuestChange}\n                              name={\"quest-\"+dropIndex}>\n                              {\n                              \n                                drop.questList.map((quest,questId) =>\n                                  <option key={questId} value={questId}>{quest.questName}</option>)\n                              }\n                            </Form.Control>\n                          </td>\n                          <td className=\"conclusion-table time\">\n                            {\n                              questTime(dropIndex)\n                            }\n                          </td>\n                          <td className=\"conclusion-table ap\">\n                          {\n                            apRequired(dropIndex)\n                          }\n                          </td>\n                        </tr>\n                        ))}\n                    {\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>所需體力：</td>\n                        <td>\n                        {\n                          dropListData.map((drop, dropIndex) => \n                            apRequired(dropIndex)).reduce(\n                            (accumulator, currentValue) => accumulator + currentValue, 0)\n                        }\n                        </td>\n                      </tr>  \n                    }\n\n                    {\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>自然回體：</td>\n                        <td>{Math.floor(timeDifferenceInMinutes() /5)}</td>\n                      </tr>\n                    }\n\n                    {\n                       <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>尚欠：</td>\n                        <td>\n                        {\n                          Math.max(0, \n                            totalApRequired() - Math.floor(timeDifferenceInMinutes() / 5) )                      \n                        }\n                        </td>\n                      </tr>\n                    }\n\n                    {\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                      </tr>}\n                    {\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>金蘋果：</td>\n                        <td>\n                        {\n                          Math.max(0,\n                          (totalApRequired() - \n                            Math.floor(timeDifferenceInMinutes() / 5)) / apLimit)\n                        }\n                        </td>\n                       </tr>\n                    }\n                    {\n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>銀蘋果：</td>\n                        <td>\n                        {\n                          Math.max(0,(totalApRequired() - Math.floor(timeDifferenceInMinutes() / 5)) / Math.ceil(apLimit/2))\n                        }\n                        </td>\n                      </tr>\n                    }\n                    { \n                      <tr>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td></td>\n                        <td>銅蘋果：</td>\n                        <td>\n                          {Math.max(0,(totalApRequired() - Math.floor(timeDifferenceInMinutes() / 5)) / 10)}\n                        </td>\n                      </tr>}\n                  </tbody>\n                </Table>\n              </Tab>\n            </Tabs>\n          </div>\n        }\n      \n        <Link to=\"/creator\">JSON Create</Link>\n\n    </Container>\n  );\n}\n\nfunction App(){\n  return (\n    <Router basename={window.location.pathname || ''}>\n      <div className=\"App\">\n        <Switch>\n          <Route exact path=\"/\">\n            <Calculator />\n          </Route>\n          <Route path=\"/creator\">\n            <CreatorApp />\n          </Route>\n        </Switch>\n      </div>\n    </Router>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}